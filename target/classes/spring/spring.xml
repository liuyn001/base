<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config.properties" />

	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="lyn.ssh.dao,
											lyn.ssh.service" />
	
	
	<!-- mybatis====================开始================================== -->
	
	<!-- mapper的扫描器 -->
	<!-- mapper的批量扫描，从mapper的包中批量扫描出mapper的 接口。自动创建代理对象并且在spring容器中注册 
		MapperScannerConfigurer:mapper的扫描器
		应用批量扫描的规范:将mapper.java和mapper.xml映射文件名称保持一致，且在同一个目录中
		自动扫描出来的mapper的bean的id为mapper类名（首字母小写）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名 
		如果扫描多个包的话，每个包中间使用半角逗号分隔
		-->
		<property name="basePackage" value="lyn.ssm.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 定义商品管理的service -->
	<bean id="itemsService" class="lyn.ssm.service.impl.ItemsServiceImpl"/>
	<!-- mybatis ========================结束================================================== -->
	
</beans>